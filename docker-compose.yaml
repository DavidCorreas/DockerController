version: "3.2"
services:

    rabbitmq:
        image: rabbitmq:3.8.3-management-alpine
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - "5672:5672"
            - "15672:15672"
        expose:
            - "5672"
            - "15672"
        networks:
            - easy-docker-net

    rabbit-internal-service:
        build:
            context: EasyDockerService/
            args:
                source_dir: ./src/Rabbit
        depends_on:
            - rabbitmq
        tty: true
        environment:
            entry_file: DockerFunctions.py
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - easy-docker-net

    mysql-master:
        container_name: mysql-master
        image: bitnami/mysql:8.0.19
        environment:
            MYSQL_REPLICATION_MODE: ${MYSQL_REPLICATION_MODE_MASTER}
            MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
            MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        restart: always
        ports:
            - "3306:3306"
        networks:
            - easy-docker-net
        volumes:
            - /tmp/data:/var/lib/mysql

    mysql-slave:
        image: bitnami/mysql:8.0.19
        user: root
        environment:
            MYSQL_REPLICATION_MODE: ${MYSQL_REPLICATION_MODE_SLAVE}
            MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
            MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
            MYSQL_MASTER_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_MASTER_HOST: ${MYSQL_MASTER_HOST}
            MYSQL_MASTER_PORT_NUMBER: ${MYSQL_MASTER_PORT_NUMBER}
        restart: always
        ports:
            - "3306"
        networks:
            - easy-docker-net
        depends_on:
            - mysql-master

    registry:
        image: registry
        ports:
            - "5000:5000"
        networks:
            - easy-docker-net

    spring-app:
        build: ./App
        ports:
            - "443"
        environment:
            - SERVICE_PORTS=443
            - EXTRA_SETTINGS=mode tcp, balance source
            - FORCE_SSL=true
        networks:
            - easy-docker-net
        restart: always
        depends_on:
            - rabbitmq
            - registry
            - mysql-master
            - mysql-slave

    haproxy:
        links:
            - spring-app
        image: dockercloud/haproxy
        restart: always
        ports:
            - "8080:8443"
            - "1936:1936"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - easy-docker-net
        environment:
            - BALANCE=source
            - STATS_PORT=1936
            - EXTRA_FRONTEND_SETTINGS_8443=mode tcp, option tcplog
        depends_on:
            - spring-app

networks:
    easy-docker-net: